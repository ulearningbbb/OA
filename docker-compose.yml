version: "3"

services:
  nginx:
    image: steedos/nginx-logrotate:1.17.7
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/docker.conf:/etc/nginx/conf.d/docker.conf
    restart: unless-stopped

  mongo:
    image: mongo:4.2
    restart: unless-stopped
    volumes:
      - ~/docker-volumes/mongo/data/db:/data/db
    command: mongod --oplogSize 128 --profile=1 --slowms=500 --replSet rs0
    ports:
      - "27017:27017"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.2
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/steedos --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  minio:
    image: minio/minio:RELEASE.2020-11-10T21-02-24Z
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ~/docker-volumes/minio/data:/data
      - ~/docker-volumes/minio/config:/root/.minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
